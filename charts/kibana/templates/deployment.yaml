apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: {{ .Chart.Name }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" | lower }}
    heritage: {{ .Release.Service }}
    release: {{ .Release.Name }}
  name: {{ .Chart.Name }}
spec:
  selector:
    matchLabels:
      app: {{ .Chart.Name }}
      release: {{ .Release.Name }}
  replicas: {{ .Values.replicaCount }}
  template:
    metadata:
      labels:
        app: {{ .Chart.Name }}
        release: {{ .Release.Name }}
    spec:
      {{- if .Values.serviceAccountName }}
      serviceAccountName: {{ .Values.serviceAccountName }}
      {{- end }}
      containers:
      - name: {{ .Chart.Name }}
        image: docker.elastic.co/kibana/kibana-oss:{{ .Values.global.docker.imageTag }}
        imagePullPolicy: IfNotPresent
        args:
          - "/bin/bash"
          - "/usr/local/bin/kibana-docker"
        env:
        {{- range $key, $value := .Values.env }}
        - name: "{{ $key }}"
          value: "{{ $value }}"
        {{- end }}
        ports:
        - containerPort: {{ .Values.service.internalPort }}
          name: {{ .Chart.Name }}
          protocol: TCP
        # livenessProbe:
        #   httpGet:
        #     path: /ping
        #     port: {{ .Values.service.internalPort }}
        # readinessProbe:
        #   httpGet:
        #     path: /ping
        #     port: {{ .Values.service.internalPort }}
        resources:
{{ toYaml .Values.resources | indent 10 }}
    {{- if .Values.affinity }}
      affinity:
{{ toYaml .Values.affinity | indent 8 }}
    {{- end }}
    {{- if .Values.nodeSelector }}
      nodeSelector:
{{ toYaml .Values.nodeSelector | indent 8 }}
    {{- end }}
      tolerations:
{{ toYaml .Values.tolerations | indent 8 }}
