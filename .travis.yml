---
language: python

env:
  global:
    - HELM_URL=https://storage.googleapis.com/kubernetes-helm
    - HELM_TGZ=helm-v2.9.1-linux-amd64.tar.gz
    - TARGET_BR=gh-pages
    - REPO_DIR=/home/travis/build/gemalto/miniapps/charts
    - GH_URL=https://gemalto.github.io/miniapps
    - YAMLLINT_VERSION=1.8.1
    - VERSION=1.0.0+build.${TRAVIS_BUILD_NUMBER}

install:
  # Installing Helm
  - wget -q ${HELM_URL}/${HELM_TGZ}
  - tar xzfv ${HELM_TGZ}
  - PATH=`pwd`/linux-amd64/:$PATH
  - helm init --client-only
  # Installig pip deps
  - sudo pip install yamllint=="${YAMLLINT_VERSION}"
 
script:
  # Check charts format
  - >
     for dir in `ls ${REPO_DIR}`; do
      helm lint ${REPO_DIR}/$dir
      if [ $? != 0 ]; then
       travis_terminate 1
      fi
  # Check YAML styling
  # - yamllint -c .yamllint.yml -s .travis.yml .yamllint.yml
  # - yamllint -c .yamllint.yml -s $(find . -type f -name "Chart.yaml")
  # - yamllint -c .yamllint.yml -s $(find . -type f -name "values.yaml")

after_success:
  - >
    if [ $TRAVIS_BRANCH = 'master' ] && [ $TRAVIS_PULL_REQUEST = 'false' ]; then
      # Temporary dir for storing new packaged charts and index files
      BUILD_DIR=$(mktemp -d)

      # Useful URLs
      REPO_URL=`git config remote.origin.url`
      SSH_REPO=${REPO_URL/https:\/\/github.com\//git@github.com:}
      SHA=`git rev-parse --verify HEAD`

      # Push temporary directory to the stack
      pushd $BUILD_DIR

      # Iterate over all charts are package them
      for dir in `ls ${REPO_DIR}`; do
       helm dep update ${REPO_DIR}/$dir
       helm package ${REPO_DIR}/$dir --version ${VERSION}
      done

      # Indexing of charts
      if [ -f index.yaml ]; then
       helm repo index --url ${GH_URL} --merge index.yaml .
      else
       helm repo index --url ${GH_URL} .
      fi

      # Pop temporary directory from the stack
      popd

      # List all the contents that we will push
      ls ${BUILD_DIR}
      
      # Clone repository and empty target branch
      git clone ${REPO_URL} out
      cd out
      git checkout ${TARGET_BR} || git checkout --orphan ${TARGET_BR}
      cd ..
      rm -rf out/* || exit 0

      # Copying contents of BUILD_DIR to out folder
      cp $BUILD_DIR/* out/
      cd out

      # Deploy only if there are some changes
      git diff --quiet
      if [ $? != 0 ]; then
       git config user.name "Travis CI"
       git config user.email "travis@travis-ci.org"
       git add *.tgz index.yaml
       git status
       git commit -m "Travis deploy ${SHA}"
       git push -f -q https://jroucheton:$GITHUB_API_KEY@github.com/gemalto/miniapps gh-pages
      fi
    fi
